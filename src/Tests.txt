Test Position
n1: [1,0] n2: opCode: 2 Mnemonic: add
n1: [1,0] n2: opCode: 2 Mnemonic: add
Test Assembly Unit
AssemblyUnit = { LineStatement [label=Loop2, instruction=Instruction [mnemonic=opCode: 2 Mnemonic: add, operand=Op Label2], comment= This is a comment2], LineStatement [label=Loop3, instruction=Instruction [mnemonic=opCode: 0 Mnemonic: null, operand=Op Label3], comment= This is a comment3], LineStatement [label=Loop, instruction=Instruction [mnemonic=opCode: 3 Mnemonic: enter, operand=Op Label], comment= This is a comment] }
AssemblyUnit = { LineStatement [label=Loop2, instruction=Instruction [mnemonic=opCode: 2 Mnemonic: add, operand=Op Label2], comment= This is a comment2], LineStatement [label=Loop3, instruction=Instruction [mnemonic=opCode: 0 Mnemonic: null, operand=Op Label3], comment= This is a comment3], LineStatement [label=Loop, instruction=Instruction [mnemonic=opCode: 3 Mnemonic: enter, operand=Op Label], comment= This is a comment] }
Test ErrorMessage
error1 at [1,0]error2 at [2,0]error3 at [3,0]
error1 at [1,0]error2 at [2,0]error3 at [3,0]
Test ErrorReporter
error1 at [1,0] error2 at [2,0] error3 at [3,0] 
error1 at [1,0] error2 at [2,0] error3 at [3,0] 
Test Position
p1[1,0] p2[2,0] p3[3,0] p4[65535,0]
p1[1,0] p2[2,0] p3[3,0] p4[65535,0]
Test LineStatement
LineStatement [label=Loop, instruction=Instruction [mnemonic=opCode: 0 Mnemonic: div, operand=Op Label], comment= This is a comment]
LineStatement [label=Loop, instruction=Instruction [mnemonic=opCode: 0 Mnemonic: div, operand=Op Label], comment= This is a comment]
Test Instruction 
Instruction [mnemonic=opCode: 56 Mnemonic: add, operand=Loop]
Instruction [mnemonic=opCode: 56 Mnemonic: add, operand=Loop]
Test Token1
t1: [Mnemonic: opCode: 0 Mnemonic: halt] [Operand: null] [Address: 0] [position: [1,0]] [Offset: 0] [Label: null] [Comment: This is a comment]t2: [Mnemonic: opCode: 1 Mnemonic: pop] [Operand: null] [Address: 1] [position: [2,0]] [Offset: 0] [Label: null] [Comment: null]t3: [Mnemonic: opCode: 2 Mnemonic: dup] [Operand: null] [Address: 2] [position: [3,0]] [Offset: 0] [Label: null] [Comment: This is the second comment]
t1: [Mnemonic: opCode: 0 Mnemonic: halt] [Operand: null] [Address: 0] [position: [1,0]] [Offset: 0] [Label: null] [Comment: This is a comment]t2: [Mnemonic: opCode: 1 Mnemonic: pop] [Operand: null] [Address: 1] [position: [2,0]] [Offset: 0] [Label: null] [Comment: null]t3: [Mnemonic: opCode: 2 Mnemonic: dup] [Operand: null] [Address: 2] [position: [3,0]] [Offset: 0] [Label: null] [Comment: This is the second comment]
Test SourceFile
filename: test.txt extension: txt filename: test2.asm extension: asm filename: test3.exe extension: exe
filename: test.txt extension: txt filename: test2.asm extension: asm filename: test3.exe extension: exe
Test Operand class
label 1 1 7
label 1 1 7
Testing Mnemonic class
opCode: 10 Mnemonic: Mnemonic 1 name opCode: 20 Mnemonic: Mnemonic 2 name opCode: 30 Mnemonic: Mnemonic 3 name
opCode: 10 Mnemonic: Mnemonic 1 name opCode: 20 Mnemonic: Mnemonic 2 name opCode: 30 Mnemonic: Mnemonic 3 name
Test Lexer 
MNUMONIC_NAMES<br.i5> OPERAND<Label> OFFSETS<??> EOL LABELS<Label> EOL MNUMONIC_NAMES<halt> COMMENTS<;this is a comment> EOL MNUMONIC_NAMES<pop> EOL MNUMONIC_NAMES<dup> EOL DIRECTIVE<.exit> EOL MNUMONIC_NAMES<ret> EOL MNUMONIC_NAMES<not> EOL MNUMONIC_NAMES<or> EOL MNUMONIC_NAMES<br.i5> OPERAND<Label> OFFSETS<-8> EOL MNUMONIC_NAMES<xor> EOL MNUMONIC_NAMES<neg> EOL MNUMONIC_NAMES<inc> EOL MNUMONIC_NAMES<dec> EOL MNUMONIC_NAMES<add> EOL MNUMONIC_NAMES<sub> EOL MNUMONIC_NAMES<mul> EOL MNUMONIC_NAMES<div> EOL MNUMONIC_NAMES<rem> EOL MNUMONIC_NAMES<shl> EOL MNUMONIC_NAMES<shr> EOL MNUMONIC_NAMES<teq> EOL MNUMONIC_NAMES<tne> EOL MNUMONIC_NAMES<tlt> EOL MNUMONIC_NAMES<tgt> EOL MNUMONIC_NAMES<tle> EOL MNUMONIC_NAMES<tge> EOL MNUMONIC_NAMES<halt> EOL MNUMONIC_NAMES<ldc.i3> OPERAND<1> EOL MNUMONIC_NAMES<br.i5> OPERAND<Label> OFFSETS<0> EOL LABELS<Label> EOL MNUMONIC_NAMES<halt> COMMENTS<;this is a comment> EOL MNUMONIC_NAMES<pop> EOL MNUMONIC_NAMES<dup> EOL DIRECTIVE<.exit> EOL MNUMONIC_NAMES<ret> EOL MNUMONIC_NAMES<not> EOL MNUMONIC_NAMES<or> EOL MNUMONIC_NAMES<br.i5> OPERAND<Label> OFFSETS<-8> EOL MNUMONIC_NAMES<xor> EOL MNUMONIC_NAMES<neg> EOL MNUMONIC_NAMES<inc> EOL MNUMONIC_NAMES<dec> EOL MNUMONIC_NAMES<add> EOL MNUMONIC_NAMES<sub> EOL MNUMONIC_NAMES<mul> EOL MNUMONIC_NAMES<div> EOL MNUMONIC_NAMES<rem> EOL MNUMONIC_NAMES<shl> EOL MNUMONIC_NAMES<shr> EOL MNUMONIC_NAMES<teq> EOL MNUMONIC_NAMES<tne> EOL MNUMONIC_NAMES<tlt> EOL MNUMONIC_NAMES<tgt> EOL MNUMONIC_NAMES<tle> EOL MNUMONIC_NAMES<tge> EOL MNUMONIC_NAMES<halt> EOL MNUMONIC_NAMES<ldc.i3> OPERAND<1> EOL 
MNUMONIC_NAMES<br.i5> OPERAND<Label> OFFSETS<??> EOL LABELS<Label> EOL MNUMONIC_NAMES<halt> COMMENTS<;this is a comment> EOL MNUMONIC_NAMES<pop> EOL MNUMONIC_NAMES<dup> EOL DIRECTIVE<.exit> EOL MNUMONIC_NAMES<ret> EOL MNUMONIC_NAMES<not> EOL MNUMONIC_NAMES<or> EOL MNUMONIC_NAMES<br.i5> OPERAND<Label> OFFSETS<-8> EOL MNUMONIC_NAMES<xor> EOL MNUMONIC_NAMES<neg> EOL MNUMONIC_NAMES<inc> EOL MNUMONIC_NAMES<dec> EOL MNUMONIC_NAMES<add> EOL MNUMONIC_NAMES<sub> EOL MNUMONIC_NAMES<mul> EOL MNUMONIC_NAMES<div> EOL MNUMONIC_NAMES<rem> EOL MNUMONIC_NAMES<shl> EOL MNUMONIC_NAMES<shr> EOL MNUMONIC_NAMES<teq> EOL MNUMONIC_NAMES<tne> EOL MNUMONIC_NAMES<tlt> EOL MNUMONIC_NAMES<tgt> EOL MNUMONIC_NAMES<tle> EOL MNUMONIC_NAMES<tge> EOL MNUMONIC_NAMES<halt> EOL MNUMONIC_NAMES<ldc.i3> OPERAND<1> EOL MNUMONIC_NAMES<br.i5> OPERAND<Label> OFFSETS<0> EOL LABELS<Label> EOL MNUMONIC_NAMES<halt> COMMENTS<;this is a comment> EOL MNUMONIC_NAMES<pop> EOL MNUMONIC_NAMES<dup> EOL DIRECTIVE<.exit> EOL MNUMONIC_NAMES<ret> EOL MNUMONIC_NAMES<not> EOL MNUMONIC_NAMES<or> EOL MNUMONIC_NAMES<br.i5> OPERAND<Label> OFFSETS<-8> EOL MNUMONIC_NAMES<xor> EOL MNUMONIC_NAMES<neg> EOL MNUMONIC_NAMES<inc> EOL MNUMONIC_NAMES<dec> EOL MNUMONIC_NAMES<add> EOL MNUMONIC_NAMES<sub> EOL MNUMONIC_NAMES<mul> EOL MNUMONIC_NAMES<div> EOL MNUMONIC_NAMES<rem> EOL MNUMONIC_NAMES<shl> EOL MNUMONIC_NAMES<shr> EOL MNUMONIC_NAMES<teq> EOL MNUMONIC_NAMES<tne> EOL MNUMONIC_NAMES<tlt> EOL MNUMONIC_NAMES<tgt> EOL MNUMONIC_NAMES<tle> EOL MNUMONIC_NAMES<tge> EOL MNUMONIC_NAMES<halt> EOL MNUMONIC_NAMES<ldc.i3> OPERAND<1> EOL 
Test Symbol Table
{dec=opCode: 18 Mnemonic: dec, ldc.i16=opCode: 218 Mnemonic: ldc.i16, div=opCode: 22 Mnemonic: div, neg=opCode: 16 Mnemonic: neg, ldf.i3=opCode: 0 Mnemonic: ldf.i3, call.i16=opCode: 231 Mnemonic: call.i16, rem=opCode: 23 Mnemonic: rem, trap=opCode: 255 Mnemonic: trap, ret=opCode: 4 Mnemonic: ret, rfu6=opCode: 0 Mnemonic: rfu6, add=opCode: 19 Mnemonic: add, rfu5=opCode: 0 Mnemonic: rfu5, teq=opCode: 26 Mnemonic: teq, rfu7=opCode: 0 Mnemonic: rfu7, rfu2=opCode: 0 Mnemonic: rfu2, rfu1=opCode: 0 Mnemonic: rfu1, rfu4=opCode: 0 Mnemonic: rfu4, rfu3=opCode: 0 Mnemonic: rfu3, br.i16=opCode: 225 Mnemonic: br.i16, ldc.i8=opCode: 217 Mnemonic: ldc.i8, tne=opCode: 27 Mnemonic: tne, decv.u8=opCode: 180 Mnemonic: decv.u8, exit=opCode: 3 Mnemonic: exit, shl=opCode: 24 Mnemonic: shl, ldc.i3=opCode: 144 Mnemonic: ldc.i3, shr=opCode: 25 Mnemonic: shr, sub=opCode: 20 Mnemonic: sub, enter.u8=opCode: 191 Mnemonic: enter.u8, mul=opCode: 21 Mnemonic: mul, ldc.i32=opCode: 219 Mnemonic: ldc.i32, enter.u5=opCode: 112 Mnemonic: enter.u5, ldv.u3=opCode: 160 Mnemonic: ldv.u3, pop=opCode: 1 Mnemonic: pop, ldv.u8=opCode: 177 Mnemonic: ldv.u8, not=opCode: 12 Mnemonic: not, tge=opCode: 31 Mnemonic: tge, br.i5=opCode: 48 Mnemonic: br.i5, br.i8=opCode: 224 Mnemonic: br.i8, and=opCode: 13 Mnemonic: and, xor=opCode: 15 Mnemonic: xor, inc=opCode: 17 Mnemonic: inc, tgt=opCode: 29 Mnemonic: tgt, stv.u3=opCode: 168 Mnemonic: stv.u3, or=opCode: 14 Mnemonic: or, addv.u8=opCode: 176 Mnemonic: addv.u8, stv.u8=opCode: 178 Mnemonic: stv.u8, tle=opCode: 30 Mnemonic: tle, addv.u3=opCode: 152 Mnemonic: addv.u3, halt=opCode: 0 Mnemonic: halt, brf.i5=opCode: 80 Mnemonic: brf.i5, incv.u8=opCode: 179 Mnemonic: incv.u8, brf.i8=opCode: 227 Mnemonic: brf.i8, lda.i16=opCode: 213 Mnemonic: lda.i16, tlt=opCode: 28 Mnemonic: tlt, dup=opCode: 2 Mnemonic: dup}
{dec=opCode: 18 Mnemonic: dec, ldc.i16=opCode: 218 Mnemonic: ldc.i16, div=opCode: 22 Mnemonic: div, neg=opCode: 16 Mnemonic: neg, ldf.i3=opCode: 0 Mnemonic: ldf.i3, call.i16=opCode: 231 Mnemonic: call.i16, rem=opCode: 23 Mnemonic: rem, trap=opCode: 255 Mnemonic: trap, ret=opCode: 4 Mnemonic: ret, rfu6=opCode: 0 Mnemonic: rfu6, add=opCode: 19 Mnemonic: add, rfu5=opCode: 0 Mnemonic: rfu5, teq=opCode: 26 Mnemonic: teq, rfu7=opCode: 0 Mnemonic: rfu7, rfu2=opCode: 0 Mnemonic: rfu2, rfu1=opCode: 0 Mnemonic: rfu1, rfu4=opCode: 0 Mnemonic: rfu4, rfu3=opCode: 0 Mnemonic: rfu3, br.i16=opCode: 225 Mnemonic: br.i16, ldc.i8=opCode: 217 Mnemonic: ldc.i8, tne=opCode: 27 Mnemonic: tne, decv.u8=opCode: 180 Mnemonic: decv.u8, exit=opCode: 3 Mnemonic: exit, shl=opCode: 24 Mnemonic: shl, ldc.i3=opCode: 144 Mnemonic: ldc.i3, shr=opCode: 25 Mnemonic: shr, sub=opCode: 20 Mnemonic: sub, enter.u8=opCode: 191 Mnemonic: enter.u8, mul=opCode: 21 Mnemonic: mul, ldc.i32=opCode: 219 Mnemonic: ldc.i32, enter.u5=opCode: 112 Mnemonic: enter.u5, ldv.u3=opCode: 160 Mnemonic: ldv.u3, pop=opCode: 1 Mnemonic: pop, ldv.u8=opCode: 177 Mnemonic: ldv.u8, not=opCode: 12 Mnemonic: not, tge=opCode: 31 Mnemonic: tge, br.i5=opCode: 48 Mnemonic: br.i5, br.i8=opCode: 224 Mnemonic: br.i8, and=opCode: 13 Mnemonic: and, xor=opCode: 15 Mnemonic: xor, inc=opCode: 17 Mnemonic: inc, tgt=opCode: 29 Mnemonic: tgt, stv.u3=opCode: 168 Mnemonic: stv.u3, or=opCode: 14 Mnemonic: or, addv.u8=opCode: 176 Mnemonic: addv.u8, stv.u8=opCode: 178 Mnemonic: stv.u8, tle=opCode: 30 Mnemonic: tle, addv.u3=opCode: 152 Mnemonic: addv.u3, halt=opCode: 0 Mnemonic: halt, brf.i5=opCode: 80 Mnemonic: brf.i5, incv.u8=opCode: 179 Mnemonic: incv.u8, brf.i8=opCode: 227 Mnemonic: brf.i8, lda.i16=opCode: 213 Mnemonic: lda.i16, tlt=opCode: 28 Mnemonic: tlt, dup=opCode: 2 Mnemonic: dup}
Test Binary Converter
File created
File created